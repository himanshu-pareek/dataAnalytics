ls()
source('E:/data_analytics/ProjectAssignment01/CARS/main.R')
head (cars)
source('E:/data_analytics/ProjectAssignment01/CARS/main.R')
head (cars)
w <- c(4, 5)
v <- c(2, 8)
weighted.mean(v, w)
48/9
source('E:/data_analytics/ProjectAssignment01/CARS/main.R')
source('E:/data_analytics/ProjectAssignment01/CARS/main.R')
weighted_am
weighted_gm
weighted_hm
sprintf ("%s %d", "test", 1:3)
sprintf ("%s  = %d", c("WEIGHTED AM", "WEIGHTED GM", "WEIGHTED HM"), c(weighted_am, weighted_gm, weighted_hm))
sprintf ("%a  = %d", c("WEIGHTED AM", "WEIGHTED GM", "WEIGHTED HM"), c(weighted_am, weighted_gm, weighted_hm))
sprintf ("%s  = %a", c("WEIGHTED AM", "WEIGHTED GM", "WEIGHTED HM"), c(weighted_am, weighted_gm, weighted_hm))
sprintf ("%s  = %f", c("WEIGHTED AM", "WEIGHTED GM", "WEIGHTED HM"), c(weighted_am, weighted_gm, weighted_hm))
plot (cars$speed, cars$mean_dist)
plot (cars$speed, cars$mean_dist, main = "Car meandist v/s speed", xlab = "Speed of car", ylab = "Mean distance")
rm (list = ls())
ls()
source('E:/data_analytics/ProjectAssignment01/CARS/main.R')
source('E:/data_analytics/ProjectAssignment01/CARS/main.R', echo=TRUE)
# reading data into R
# filename is "CARS.csv"
filename <- "CARS.csv"
cars <- read.csv(filename, row.names = 1, na.strings = c("Not Available", "NOT AVAILABLE", "NULL", "NA", "na", "not available", "-", "_", "X"))
# removing na values from data
cars <- cars[complete.cases(cars), ]
# import dplyr package
library(dplyr)
# We will group data with respect to speed of the car
cars <- group_by (cars,speed)
# We will thtan take average of speeds in each group
cars <- summarize(cars, mean_dist = mean(dist))
# Now we will calculate weighted means (AM, GM and HM)
weighted_am <- weighted.mean(cars$mean_dist, cars$speed)
weighted_gm <- exp(weighted.mean(log(cars$mean_dist), cars$speed))
weighted_hm <- 1 / (weighted.mean(1 / (cars$mean_dist), cars$speed))
# printing weighted am, gm and hm
sprintf (
"%s  = %f",
c("WEIGHTED AM", "WEIGHTED GM", "WEIGHTED HM"),
c(weighted_am, weighted_gm, weighted_hm)
)
# Here range and observations both are different, so we will consider GM
# We can further visualize data using plot
plot (
cars$speed,
cars$mean_dist,
main = "Car meandist v/s speed",
xlab = "Speed of car",
ylab = "Mean distance"
)
# We can see that relation between mean distance and speed
# is approximately linear
dir()
# reading data into R
# filename is "CARS.csv"
filename <- "CARS.csv"
cars <- read.csv(filename, row.names = 1, na.strings = c("Not Available", "NOT AVAILABLE", "NULL", "NA", "na", "not available", "-", "_", "X"))
# removing na values from data
cars <- cars[complete.cases(cars), ]
# import dplyr package
library(dplyr)
# We will group data with respect to speed of the car
cars <- group_by (cars,speed)
# We will thtan take average of speeds in each group
cars <- summarize(cars, mean_dist = mean(dist))
# Now we will calculate weighted means (AM, GM and HM)
weighted_am <- weighted.mean(cars$mean_dist, cars$speed)
weighted_gm <- exp(weighted.mean(log(cars$mean_dist), cars$speed))
weighted_hm <- 1 / (weighted.mean(1 / (cars$mean_dist), cars$speed))
# printing weighted am, gm and hm
sprintf (
"%s  = %f",
c("WEIGHTED AM", "WEIGHTED GM", "WEIGHTED HM"),
c(weighted_am, weighted_gm, weighted_hm)
)
# Here range and observations both are different, so we will consider GM
# We can further visualize data using plot
plot (
cars$speed,
cars$mean_dist,
main = "Car meandist v/s speed",
xlab = "Speed of car",
ylab = "Mean distance"
)
# We can see that relation between mean distance and speed
# is approximately linear
knitr::opts_chunk$set(echo = TRUE)
filename <- "CARS.csv"
cars <- read.csv(filename, row.names = 1, na.strings = c("Not Available", "NOT AVAILABLE", "NULL", "NA", "na", "not available", "-", "_", "X"))
head (cars)
cars <- cars[complete.cases(cars), ]
head (cars)
library(dplyr)
cars <- group_by (cars,speed)
head (cars)
cars <- summarize(cars, mean_dist = mean(dist))
head (cars)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: reading data into R from excel file
filename <- "CARS.csv"
cars <- read.csv(filename, row.names = 1, na.strings = c("Not Available", "NOT AVAILABLE", "NULL", "NA", "na", "not available", "-", "_", "X"))
head (cars)
# Chunk 3: removing na values (if any)
cars <- cars[complete.cases(cars), ]
head (cars)
# Chunk 4: deleting id column
library(dplyr)
cars <- group_by (cars,speed)
head (cars)
# Chunk 5: Creating random indices for sample
cars <- summarize(cars, mean_dist = mean(dist))
head (cars)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: reading data into R from excel file
filename <- "CARS.csv"
cars <- read.csv(filename, row.names = 1, na.strings = c("Not Available", "NOT AVAILABLE", "NULL", "NA", "na", "not available", "-", "_", "X"))
head (cars)
# Chunk 3: removing na values (if any)
cars <- cars[complete.cases(cars), ]
head (cars)
# Chunk 4: deleting id column
library(dplyr)
cars <- group_by (cars,speed)
head (cars)
# Chunk 5: Creating random indices for sample
cars <- summarize(cars, mean_dist = mean(dist))
head (cars)
# Chunk 6: Select sample from iris data
weighted_am <- weighted.mean(cars$mean_dist, cars$speed)
weighted_gm <- exp(weighted.mean(log(cars$mean_dist), cars$speed))
weighted_hm <- 1 / (weighted.mean(1 / (cars$mean_dist), cars$speed))
sprintf (
"%s  = %f",
c("WEIGHTED AM", "WEIGHTED GM", "WEIGHTED HM"),
c(weighted_am, weighted_gm, weighted_hm)
)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: reading data into R from excel file
filename <- "CARS.csv"
cars <- read.csv(filename, row.names = 1, na.strings = c("Not Available", "NOT AVAILABLE", "NULL", "NA", "na", "not available", "-", "_", "X"))
head (cars)
# Chunk 3: removing na values (if any)
cars <- cars[complete.cases(cars), ]
head (cars)
# Chunk 4: deleting id column
library(dplyr)
cars <- group_by (cars,speed)
head (cars)
# Chunk 5: Creating random indices for sample
cars <- summarize(cars, mean_dist = mean(dist))
head (cars)
# Chunk 6: Select sample from iris data
weighted_am <- weighted.mean(cars$mean_dist, cars$speed)
weighted_gm <- exp(weighted.mean(log(cars$mean_dist), cars$speed))
weighted_hm <- 1 / (weighted.mean(1 / (cars$mean_dist), cars$speed))
# Chunk 7: Select sample from iris data
sprintf (
"%s  = %f",
c("WEIGHTED AM", "WEIGHTED GM", "WEIGHTED HM"),
c(weighted_am, weighted_gm, weighted_hm)
)
plot (
cars$speed,
cars$mean_dist,
main = "Car meandist v/s speed",
xlab = "Speed of car",
ylab = "Mean distance"
)
